Vagrant.configure("2") do |config|
  
    config.vm.box = "bento/ubuntu-20.04"
    config.vm.hostname = "etcd3"
    # VB or Vagrant is always creating a NAT interface, with IP range of 10....
    # But I needed a network which can be part of the host netwrork IP range. At the 
    #    time of this it was 192.168.1.0/24
    # To acheive it looks like I need to create a public network of type Bridge.
    # Bridge network I think what it means is, the guest OS will use the host's 
    # IP Interface. A host can have multiple interfaces & you need to specify the exact name.
    # In case you get it wring, vagrant up will propmpt you for that information.
    # As you can see from the below config option, :bridge parameter is used to specify the name of the 
    # IP interface on my host. Please note, it will diffrent on diff machines.
    # When I set the type: dhcp, I was getting assigned a IPV6 address, so what I did was I hardcoded
    # the IP as u can see from the below config, like this: "ip: '192.168.1.52'"
  
    config.vm.network "public_network", ip: '10.0.0.152', :bridge => 'en0: Wi-Fi' #,type: "dhcp" 
    #config.vm.network "private_network", ip: "192.168.50.7", virtualbox__intnet: "nodenw"
    
  end
  
  #Vagrant  notes
  # /vagrant dor inside the VM will map to folder on host that contains the vagrant 
  
  # Install docker
  # sudo apt-get update
  # sudo apt-get install ca-certificates curl gnupg lsb-release

  # sudo mkdir -p /etc/apt/keyrings
  # curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

  # echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

  # sudo apt-get update
  # sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin

  # sudo usermod -aG docker vagrant
  # CREATE ROLE ad SUPERUSER LOGIN PASSWORD '123';
  
  
# pgagent host=/var/run/postgresql dbname=test user=postgres




# PGPASSWORD=dev psql -U dev -h localhost -d suncoast_db -c "update stocks  AS p set qty =s.qty from(select sku,qty,product_id from sevenstar_products1  ) s where (s.product_id =p.product_id) and (s.qty  <>p.qty ) and p.channel_id =1 and p.status =6;update products AS p set price =s.price from(select sku,price from sevenstar_products  ) s where (s.sku =p.sku) and (s.price <>p.price )"

# PGPASSWORD=dev psql -U dev -h localhost -d suncoast_db -c "update stocks  AS p set qty =s.qty from(select sku,qty,product_id from sevenstar_products1  ) s where (s.product_id =p.product_id) and (s.qty  <>p.qty ) and p.channel_id =1 and p.status =6; update products AS p set price =s.price from(select sku,price from sevenstar_products  ) s where (s.sku =p.sku) and (s.price <>p.price )"


# update products AS p set price =s.price from(select sku,price from sevenstar_products  ) s where (s.sku =p.sku) and (s.price <>p.price )


# 0 0 * * * PGPASSWORD=dev psql -U dev -h localhost -d suncoast_db -c "update stocks  AS p set qty =s.qty from(select sku,qty,product_id from sevenstar_products1  ) s where (s.product_id =p.product_id) and (s.qty  <>p.qty ) and p.channel_id =1 and p.status =6; update products AS p set price =s.price from(select sku,price from sevenstar_products  ) s where (s.sku =p.sku) and (s.price <>p.price )" > $HOME/`date +\%Y\%m\%d\%H\%M\%S`-cron.log 2>&1